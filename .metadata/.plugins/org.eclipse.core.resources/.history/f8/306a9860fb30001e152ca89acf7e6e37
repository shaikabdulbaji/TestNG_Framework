package b39ReadingDatafromExcelfilesintoDataProvidermethodusingPOIAPI;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.Iterator;

import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.testng.annotations.DataProvider;
import org.testng.annotations.Test;

public class asample {

	FileInputStream fis;
	XSSFWorkbook workbook;
	
	@Test(dataProvider = "supplier")
	public void loginTest()
	{
		
	}
	
	
	
	@DataProvider(name="supplier")
	public void dataSupplier() {

		String excelPath = System.getProperty("user.dir")+"\\src\\test\\resource\\employees logins.xlsx";
		
		File excelFile = new File(excelPath);
		
		try {
			fis = new FileInputStream(excelFile);
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		}
		
		try {
			workbook = new XSSFWorkbook(fis);
		} catch (IOException e) {
			e.printStackTrace();
		}
		
		XSSFSheet sheet = workbook.getSheet("Sheet1");
		
		Iterator<Row> rows = sheet.iterator();
		
		int rowscount = sheet.getPhysicalNumberOfRows();
		int columncount = sheet.getRow(0).getPhysicalNumberOfCells();
		
		Object[][] data = new Object[rowscount][columncount];
		int r = 0;
		int c = 0;
		
		while(rows.hasNext())
		{
			Row row = rows.next();
			Iterator<Cell> cells = row.iterator();
			
			while(cells.hasNext())
			{
				Cell cell = cells.next();
				CellType celltype = cell.getCellType();
				
				switch(celltype)
				{
					case STRING :
						data[r][c] = cell.getStringCellValue();
						c++;
						break;
						
					case NUMERIC :
						data[r][c] = cell.getNumericCellValue();
						c++;
						break;
						
					case BOOLEAN :
						data[r][c] = cell.getBooleanCellValue();
						c++;
						break;
				}
				
			}
			
		}
			
	}

}
