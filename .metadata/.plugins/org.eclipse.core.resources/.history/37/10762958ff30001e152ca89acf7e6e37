package b39ReadingDatafromExcelfilesintoDataProvidermethodusingPOIAPI;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.Iterator;

import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.testng.Assert;
import org.testng.annotations.DataProvider;
import org.testng.annotations.Test;

import io.github.bonigarcia.wdm.WebDriverManager;

public class asample {

	FileInputStream fis;
	XSSFWorkbook workbook;
	
	@Test(dataProvider = "supplier")
	public void loginTest(String email, int password)
	{
		WebDriverManager.chromedriver().setup();
		WebDriver driver = new ChromeDriver(); 
		driver.manage().window().maximize();   
		driver.get("https://tutorialsninja.com/demo");  
		
		driver.findElement(By.xpath("//span[text()='My Account']")).click();
		driver.findElement(By.xpath("//a[text()='Login']")).click();
		driver.findElement(By.id("input-email")).sendKeys(email);
		driver.findElement(By.id("input-password")).sendKeys(String.valueOf(password));
		driver.findElement(By.xpath("//input[@type='submit']")).click();
		
		Assert.assertTrue(driver.findElement(By.xpath("//a[text()='Edit your account information']")).isDisplayed());
		
		driver.quit();	
	}
	
	
	
	@DataProvider(name="supplier")
	public Object[][] dataSupplier() {

		String excelPath = System.getProperty("user.dir")+"\\src\\test\\resource\\employees logins.xlsx";
		
		File excelFile = new File(excelPath);
		
		try {
			fis = new FileInputStream(excelFile);
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		}
		
		try {
			workbook = new XSSFWorkbook(fis);
		} catch (IOException e) {
			e.printStackTrace();
		}
		
		XSSFSheet sheet = workbook.getSheet("Sheet1");
		
		Iterator<Row> rows = sheet.iterator();
		
		int rowscount = sheet.getPhysicalNumberOfRows();
		int columncount = sheet.getRow(0).getLastCellNum();
		
		Object[][] data = new Object[rowscount-1][columncount-1];
		
		for(int r=0; r<rowscount-1; r++)
		{
			XSSFRow row = sheet.getRow(r+1);  
			
			for(int c=0; c<columncount; c++)
			{
				XSSFCell cell = row.getCell(c);  
				
				CellType celltype = cell.getCellType();  
		
				switch(celltype)
				{
					case STRING :
						data[r][c] = cell.getStringCellValue();
						System.out.println(data[r][c]);
						break;
						
					case NUMERIC :
						data[r][c] = (int)cell.getNumericCellValue();
						System.out.println(data[r][c]);
						break;
						
					case BOOLEAN :
						data[r][c] = cell.getBooleanCellValue();
						System.out.println(data[r][c]);
						break;
				}
				
			}
			
		}
		return data;
		
	}

}
